package com.initial.modules.impl.exploit;

import com.initial.settings.impl.*;
import net.minecraft.entity.*;
import com.initial.modules.*;
import com.initial.settings.*;
import net.minecraft.entity.player.*;
import net.minecraft.util.*;
import java.util.*;
import com.initial.events.impl.*;
import com.initial.*;
import com.initial.events.*;

public class ClickTP extends Module
{
    public DoubleSet tpMaxDistance;
    public ModeSet mode;
    ArrayList<Entity> entities;
    private BlockPos repeatPos;
    int ticks;
    boolean done;
    
    public ClickTP() {
        super("ClickTP", 0, Category.EXPLOIT);
        this.tpMaxDistance = new DoubleSet("Distance", 30.0, 10.0, 100.0, 1.0);
        this.mode = new ModeSet("Mode", "Look", new String[] { "Look", "Player", "Morgan" });
        this.entities = new ArrayList<Entity>();
        this.ticks = 0;
        this.done = false;
        this.addSettings(this.tpMaxDistance, this.mode);
    }
    
    @Override
    public void onEnable() {
        super.onEnable();
        final MovingObjectPosition ray = this.mc.thePlayer.rayTrace(this.tpMaxDistance.getValue(), 1.0f);
        this.repeatPos = new BlockPos(ray.getBlockPos().getX(), ray.getBlockPos().getY(), ray.getBlockPos().getZ());
        final String mode = this.mode.getMode();
        switch (mode) {
            case "Look": {
                final MovingObjectPosition rayTrace = this.mc.thePlayer.rayTrace(35.0, 1.0f);
                this.mc.thePlayer.setPosition(rayTrace.hitVec.xCoord, rayTrace.hitVec.yCoord + 2.0, rayTrace.hitVec.zCoord);
                this.toggle();
                break;
            }
            case "Player": {
                for (final Entity e : this.mc.theWorld.loadedEntityList) {
                    if (e != this.mc.thePlayer && e instanceof EntityPlayer && ClickTP.localPlayer.getDistanceToEntity(e) < this.tpMaxDistance.getValue() && e.fallDistance < 3.0f) {
                        this.entities.add(e);
                    }
                }
                this.entities.sort(Comparator.comparingDouble(entity -> entity.getDistanceToEntity(this.mc.thePlayer)));
                if (!this.entities.isEmpty()) {
                    final Entity target = this.entities.get(0);
                    if (target instanceof EntityPlayer) {
                        this.mc.thePlayer.setPosition(target.posX, target.posY + 2.0, target.posZ);
                    }
                }
                this.toggle();
                break;
            }
        }
    }
    
    @EventTarget
    public void onPre(final EventMotion e) {
        this.mc.thePlayer.motionY = 0.0;
        if (this.mode.getMode().equalsIgnoreCase("Morgan") && this.mc.thePlayer.ticksExisted % 3 == 0) {
            final double x = this.repeatPos.getX();
            final double y = this.repeatPos.getY();
            final double z = this.repeatPos.getZ();
            final double distance = ClickTP.localPlayer.getDistance(this.repeatPos.getX(), this.repeatPos.getY(), this.repeatPos.getZ());
            e.setY(e.getY() - 3325711.0);
            e.setX(e.getX() - 3325771.0);
            e.setZ(e.getZ() - 3325718.0);
            e.setOnGround(false);
            this.mc.thePlayer.setPosition(x, y + 1.52, z);
            ClickTP.localPlayer.motionY = 0.0;
            Astomero.addChatMessage("Traveled " + Math.round(distance * 10.0) / 10.0 + " blocks");
            this.toggle();
        }
    }
    
    @Override
    public void onDisable() {
        super.onDisable();
        this.entities.clear();
    }
}
