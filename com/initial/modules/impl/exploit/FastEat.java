package com.initial.modules.impl.exploit;

import com.initial.settings.impl.*;
import com.initial.utils.player.*;
import com.initial.modules.*;
import com.initial.settings.*;
import com.initial.events.impl.*;
import net.minecraft.item.*;
import net.minecraft.network.play.client.*;
import com.initial.utils.networking.*;
import net.minecraft.network.*;
import net.minecraft.entity.player.*;
import org.lwjgl.input.*;
import com.initial.events.*;

public class FastEat extends Module
{
    String[] modes;
    public ModeSet mode;
    public DoubleSet packets;
    public DoubleSet delay;
    TimerHelper timer;
    int ticks;
    
    public FastEat() {
        super("FastEat", 0, Category.EXPLOIT);
        this.modes = new String[] { "Instant", "Verus", "Custom", "NCP", "Instant2" };
        this.mode = new ModeSet("Mode", "Instant", this.modes);
        this.packets = new DoubleSet("Packets", 5.0, 1.0, 10.0, 1.0);
        this.delay = new DoubleSet("Delay", 1000.0, 0.0, 10000.0, 500.0);
        this.timer = new TimerHelper();
        this.addSettings(this.mode, this.packets, this.delay);
    }
    
    @EventTarget
    public void onTick(final EventTick event) {
        final boolean consumable = (this.mc.thePlayer.getHeldItem() != null && this.mc.thePlayer.getHeldItem().getItem() != null && this.mc.thePlayer.getHeldItem().getItem() instanceof ItemFood) || (this.mc.thePlayer.getHeldItem() != null && this.mc.thePlayer.getHeldItem().getItem() != null && this.mc.thePlayer.getHeldItem().getItem() instanceof ItemPotion);
        this.setDisplayName("Fast Eat §7" + this.mode.getMode());
        final String mode = this.mode.getMode();
        switch (mode) {
            case "Verus": {
                if (consumable && this.mc.thePlayer.isEating() && this.timer.hasTimeElapsed((long)this.delay.getValue(), false)) {
                    for (int a = 0; a < 5; ++a) {
                        PacketUtil.sendPacket(new C03PacketPlayer.C04PacketPlayerPosition(this.mc.thePlayer.posX, this.mc.thePlayer.posY + 1.0E-5, this.mc.thePlayer.posZ, false));
                    }
                    this.timer.reset();
                    break;
                }
                break;
            }
            case "Instant": {
                if (consumable && this.mc.thePlayer.isEating() && this.timer.hasTimeElapsed((long)this.delay.getValue(), false)) {
                    for (int a = 0; a < 35; ++a) {
                        PacketUtil.sendPacket(new C03PacketPlayer(this.mc.thePlayer.onGround));
                    }
                    this.mc.playerController.onStoppedUsingItem(this.mc.thePlayer);
                    this.timer.reset();
                    break;
                }
                break;
            }
            case "Instant2": {
                if (consumable && Mouse.isButtonDown(1) && this.timer.hasTimeElapsed((long)this.delay.getValue(), true)) {
                    for (int a = 0; a < 35; ++a) {
                        PacketUtil.sendPacket(new C03PacketPlayer(this.mc.thePlayer.onGround));
                    }
                    this.mc.playerController.onStoppedUsingItem(this.mc.thePlayer);
                    break;
                }
                break;
            }
            case "NCP": {
                if (consumable && this.mc.thePlayer.isEating() && this.timer.hasTimeElapsed((long)this.delay.getValue(), false) && this.mc.thePlayer.getItemInUseDuration() > 12) {
                    for (int a = 0; a < 2; ++a) {
                        PacketUtil.sendPacket(new C03PacketPlayer(this.mc.thePlayer.onGround));
                    }
                    this.timer.reset();
                    break;
                }
                break;
            }
            case "Custom": {
                if (!this.timer.hasTimeElapsed((long)this.delay.getValue(), false) || !consumable || !this.mc.thePlayer.isEating()) {
                    break;
                }
                if (16 > this.ticks) {
                    for (int a = 0; a < this.packets.getValue(); ++a) {
                        PacketUtil.sendPacket(new C03PacketPlayer(true));
                        ++this.ticks;
                    }
                    break;
                }
                this.ticks = 0;
                this.timer.reset();
                break;
            }
        }
    }
}
